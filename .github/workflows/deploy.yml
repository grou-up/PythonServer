name: Deploy Django to AWS Lambda

on:
  push:
    branches:
      - devServer

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Zappa
        run: pip install zappa

      - name: Generate zappa_settings.json
        run: |
          cat <<EOF > zappa_settings.json
          {
            "production": {
              "aws_region": "ap-northeast-2",
              "profile_name": "default",
              "project_name": "djangoserver",
              "runtime": "python3.9",
              "s3_bucket": "${{ secrets.AWS_S3_BUCKET }}",
              "environment_variables": {
                "DB_ENGINE": "${{ secrets.AWS_DB_ENGINE }}",
                "DB_NAME": "${{ secrets.AWS_DB_NAME }}",
                "DB_USER": "${{ secrets.AWS_DB_USER }}",
                "DB_PASSWORD": "${{ secrets.AWS_DB_PASSWORD }}",
                "DB_HOST": "${{ secrets.AWS_DB_HOST }}",
                "DB_PORT": "${{ secrets.AWS_DB_PORT }}"
              }
            }
          }
          EOF

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
          AWS_REGION: "ap-northeast-2"

        run: |
          zappa update production --set-env DB_ENGINE=${{ secrets.AWS_DB_ENGINE }} \
                                   --set-env DB_NAME=${{ secrets.AWS_DB_NAME }} \
                                   --set-env DB_USER=${{ secrets.AWS_DB_USER }} \
                                   --set-env DB_PASSWORD=${{ secrets.AWS_DB_PASSWORD }} \
                                   --set-env DB_HOST=${{ secrets.AWS_DB_HOST }} \
                                   --set-env DB_PORT=${{ secrets.AWS_DB_PORT }}
