name: Deploy Django to AWS Lambda

on:
  push:
    branches:
      - devServer

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m venv venv
          venv/bin/python -m pip install --upgrade pip
          venv/bin/pip install awscli
          venv/bin/pip install mysql-connector-python
          venv/bin/pip install -r requirements.txt
          venv/bin/pip install zappa

      - name: Generate zappa_settings.json
        run: |
          cat <<EOF > zappa_settings.json
          {
            "production": {
              "project_name": "djangoserver",
              "runtime": "python3.9",
              "s3_bucket": "${{ secrets.AWS_S3_BUCKET }}",
              "slim_handler": true,
              "aws_region": "ap-northeast-2",
              "exclude": [
                "boto3",
                "dateutil",
                "botocore",
                "s3transfer",
                "concurrent"
              ],
              "environment_variables": {
                "AWS_ACCESS_KEY_ID": "${{ secrets.AWS_ACCESS_KEY_ID }}",
                "AWS_SECRET_ACCESS_KEY": "${{ secrets.AWS_SECRET_ACCESS_KEY }}",
                "AWS_REGION": "ap-northeast-2",
                "DB_ENGINE": "${{ secrets.AWS_DB_ENGINE }}",
                "DB_NAME": "${{ secrets.AWS_DB_NAME }}",
                "DB_USER": "${{ secrets.AWS_DB_USER }}",
                "DB_PASSWORD": "${{ secrets.AWS_DB_PASSWORD }}",
                "DB_HOST": "${{ secrets.AWS_DB_HOST }}",
                "DB_PORT": "${{ secrets.AWS_DB_PORT }}"
              }
            }
          }
          EOF

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-northeast-2"

        run: |
          if venv/bin/zappa status production > /dev/null 2>&1; then
            echo "Updating existing deployment..."
            venv/bin/zappa update production
          else
            echo "Deploying new Lambda function..."
            venv/bin/zappa deploy production
          fi
